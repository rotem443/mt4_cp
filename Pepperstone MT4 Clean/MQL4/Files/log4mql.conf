##
# General settings

# Loglevel for logging class internal messages
log4mql	= info

# Set the default log level
# This level is applied to each file which is not configured explicitly
defaultLevel = info

# File for logging entrys
# Set to off to disable logging to file
logfile = log4mql.log


##
# Log file rotation (logrotate)

# rotateEnabled set to true to enable log file rotation
# rotateEnabled set to false to disable log file rotation
rotateEnable = true

# Checking file size is an expensive operation So we check each X log events for
# the log file size. A lower value will decrease performance, but rotates more
# excact to the configured size. A higher value will increase perfoermance, but
# rotates less exact to the configured size
rotateCheckPeriod = 1000

# Rotate log files when they growth above this value (in megabytes)
rotateSizeMb = 1

# Generations of log files to keep
rotateGenerations = 8


##
# Log levels by files

# <Filename> = <Loglevel>
# Set an explicit log level to your mql files
#
# <Filename>
# The name of the source file (mq4 / mqh) without file extension. Case will be
# ignored. For example, if filename of your source file, wich is the origin of
# your log event is 'MyCustomIndicator.mq4'. Than you can use for <Logfile>:
# - MyCustomIndicator
# - mycustomindicator
# - MYCUSTOMINDICATOR
#
# <Loglevel>
# Each logfile can contain logging events with any log level. Here you can
# configure the minimum required level of the log event, which should be shown
# in the MetaTrader console (Experts tab) and written to log file.
# (Excepting all events in optimisation mode or console output in test mode)
# Valid log level values
# - trace
# - debug
# - info
# - warn
# - error
# - crit
MyCustomIndicator           = info
MyExperimentalScript        = debug
MyProductionalExpertAdvisor = warn
SomeOtherBuddy              = crit
CurrentPrototype            = trace

